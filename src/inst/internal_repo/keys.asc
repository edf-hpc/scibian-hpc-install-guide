=== Authentication and encryption keys

==== Configuration encryption keys

As explained in the _Puppet-HPC reference documentation_ (chapter _Software
Architecture_, section _Sensitive Data Encryption_), the sensitive data stored
in the internal configuration repository are encrypted using two keys:

* asymmetric PKCS7 key pair for encrypting values in Hiera,
* symmetric AES key for encrypting files.

These keys must be generated following the bootstrap procedure available in the
Puppet-HPC Reference Documentation.

==== SSH host keys

The SSH host keys must stay consistent between node re-installations and/or
diskless reboots. To ensure this, the SSH host keys are generated in the
cluster's files directory of the internal configuration repository before their
first installation and/or diskless boot.

Firstly, create the `hostkeys` directory:

----
# cd $ADMIN
# mkdir -p hpc-privatedata/files/$CLUSTER/hostkeys
----

Then, run the following script:

----
# puppet-hpc/scripts/sync-ssh-hostkeys.sh hpc-privatedata $CLUSTER
----

This script ensures that all nodes present in the `master_network` hash have
valid SSH host keys.

==== SSH root key

For password-less SSH authentication from the admin and generic service nodes to
all the other nodes of the cluster, SSH authentication keys pair are deployed
for root on the nodes.

First, create the `rootkeys` sub-directory in the cluster's files directory of
the internal configuration repository:

----
# cd $ADMIN
# mkdir -p hpc-privatedata/files/$CLUSTER/rootkeys
----

Then, generate the key pair:

----
# ssh-keygen -t rsa -b 2048 -N '' -C root@$CLUSTER \
    -f hpc-privatedata/files/$CLUSTER/rootkeys/id_rsa_root
----

Eventually, adjust the key type and size. Encode the private key with the
following helper script provided by Puppet-HPC:

----
# puppet-hpc/scripts/encode-file.sh hpc-privatedata $CLUSTER \
    hpc-privatedata/files/$CLUSTER/rootkeys/id_rsa_root
generating encoded file hpc-privatedata/files/foobar/rootkeys/id_rsa_root.enc
----

Do not forget to remove the generated unencrypted private key:

----
# rm hpc-privatedata/files/$CLUSTER/rootkeys/id_rsa_root
----

Finally, publish the public key with the following parameter in the cluster
specific layer of the hiera repository
`$ADMIN/hpc-privatedata/hieradata/$CLUSTER/cluster.yaml`:

----
openssh::server::root_public_key: <pubkey>
----
