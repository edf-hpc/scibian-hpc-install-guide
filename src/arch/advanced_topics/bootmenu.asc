[[arch-adv-bootmenu]]
=== iPXE Bootmenu Generator ===

By default on Scibian HPC clusters, the DHCP servers sends as filename to iPXE
ROM an HTTP URL to a Python CGI script `bootmenu.py` which is a iPXE bootmenu
generator. Optionally, this behaviour can be altered by modifying
`iscdhcp::bootmenu_url` parameter in Hiera repository.

The Python CGI script `bootmenu.py` is provided by
`scibian-hpc-netboot-bootmenu` package.

On the HTTP server side, this script initially parses the nodes boot parameters
configuration YAML file `/etc/scibian-hpc-netboot/boot-params.yaml`. This file
provides all node specific boot parameters, including ethernet boot device,
default OS, media and version, etc. When looking for a parameter (ex: `os`),
the script first searches into the nodeset sections whose node is member (ex:
node `fbcn02` is member of nodeset `fbcn[01-10]`). If not found, the parameter
is finally read into the `defaults` section.

The `/etc/scibian-hpc-netboot/boot-params.yaml` file is deployed by Puppet-HPC
based on the following inputs:

- the default values provided by Puppet-HPC _boothttp_ module within
  `boot_params_defaults` parameter,
- the DNS nameservers and P2P tracker computed by Puppet-HPC
  `bootsystem::server` profile,
- the `boot_params` hash parameter in Hiera repository.

Then, the script _compiles_ sequentially all the menu entries provided as YAML
files in directory `/etc/scibian-hpc-netboot/menu/entries.d`. The YAML files
must respect the following format:

[source,yaml]
-----
<os>:
  <media>:
    <version>:
      label:  <label>
      [dir:   <dir>]
      initrd: <initrd>
      kernel: <initrd>
      opts:   <opts>
-----

Where:

- `<os>` is the operating system name (ex: `scibian9`)
- `<media>` is the symbolic name of a media where the OS is deployed (`disk` or
  `ram`)
- `<version>` is a symbolic name of an entry version (ex: `main` or `test`)

An `<os>` can contain multiple `<media>`, a `<media>` can contain multiple
`<version>`. An entry is defined by the concatenation of these 3 parameters,
ex: `scibian9-disk-main`. Then, each entry is defined by the following
parameters:

- `label`: the label of the entry visible in the boot menu
- `dir` (optional): the subdirectory of kernel and initrd files in the
  `${base-url}` (see below), default value is empty.
- `initrd`: the file name of the initrd archive
- `kernel`: the file name of the Linux kernel
- `opts`: the arguments given to the Linux kernel

The `${base-url}` is a iPXE placeholder defined by the CGI script for every
entries. Its value mainly depends on the media of the entry:

- for `disk` media, the value is `\http://<diskinstall_server>/disk/<os>`
- for `ram` media, the value is `\http://<diskless_server>/<os>`

The `<*_server>` parameters are defined in nodes boot parameters YAML
configuration file `/etc/scibian-hpc-netboot/boot-params.yaml`.

The parameters of an entry can be templated with all node boot parameters and
the OS, media, version and initrd of the entry. As an example, here is a valid
entry:

[source,yaml]
-----
scibian9:
  disk:
    main:
      label:  Install {{ os }}
      dir:    debian-installer/amd64
      initrd: initrd.gz
      kernel: linux
      opts:   >
        initrd={{ initrd }}
        url=http://{{ diskinstall_server }}/cgi-bin/scibian-hpc-netboot/preseedator.py?node=${hostname}
        console={{ console }}
        auto
        interface={{ boot_dev }}
        locale={{ locale }}
        console-keymaps-at/keymap={{ keymap }}
        keyboard-configuration/xkb-keymap={{ keymap }}
        languagechooser/language-name={{ language }}
        netcfg/get_domain={{ domain }}
        netcfg/get_nameservers="{{ nameservers|join(' ') }}"
        netcfg/no_default_route=true
        debian-installer/add-kernel-opts=console={{ console }}
        priority=critical
        scibian-installer
-----

All the parameters between double curly braces (ex: `{{boot_dev}}`) are
dynamically replaced by node boot parameters. This way, entries can be defined
in a generic way.

The YAML entries files in directory `/etc/scibian-hpc-netboot/menu/entries.d`
are read sequentially. The entries provided in the next files can override
entries defined in previous files. In other words, only the last definition of
an entry is considered. As an example, the entry `scibian9-disk-main` defined
in `0_default.yaml` can be overriden in `1_other.yaml`.

The `scibian-hpc-netboot-menu` provides default entries with file
`0_default.yaml`. All the entries defined in this file can be overriden with
Puppet-HPC by setting the `profiles::bootsystem::menu_entries` hash parameter
in Hiera repository.
