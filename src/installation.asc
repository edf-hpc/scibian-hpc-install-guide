= Installation procedure

////
TODO: fill this chapter to document all the steps to follow in order to install
a Scibian HPC cluster.
////

== Internal repository

////
TODO: document the steps to initialize the internal hieradata repository
////

== Cluster definition

////
TODO: document how-to write cluster definition in hiera, with reference to
[Puppet-HPC reference documentation]
////

== Generate keys

////
TODO: document the steps to generate the keys, certificates, and so on.
////
 
== Install admin node

////
TODO: document the steps to boot the admin node with rikenter and
install/configure minimal installation system in live.
////

== Install generic servers

////
TODO: document how-to install and configure generic service nodes.
////

== Configure Ceph

////
TODO: document how-to deploy and configure Ceph cluster.
////

=== Service initialization

==== mon init 

This procedure only works on a running cluster, the initial mon creation
uses another command.

From an admin node:

--------
# cd <ceph deploy directory>
# ceph-deploy --overwrite-conf mon create <mon hostname>
--------

==== osd

==== mds

MDS has no state on the node, the configuration in puppet is sufficient
to initialize the service.

==== radosgw

RadosGW has no state on the node, the configuration in puppet is sufficient
to initialize the service.

== Re-install admin node

////
TODO: document how-to install admin node with generic service nodes.
////

== Install virtual machines

////
TODO: document how-to install and configure virtual machines with references to
[bootstraping guides] for service.
////

== Build diskless image

Diskless nodes uses squashfs images downloaded at boot. A simple way to 
generate these images is to use https://github.com/edf-hpc/clara[`clara`].
Once configured, `clara image create` can be used to build Debian image(s).

Clara can install specific packages into images, manage repositories used, 
add specific files and directories.

Example:
-------------------------------------------------------------------------------
#clara image create scibian8 
-------------------------------------------------------------------------------

Clara can also generate an initrd to use with the image. It can download the
image either by http or bitorrent protocol.

Example:
-------------------------------------------------------------------------------
#clara image initrd scibian8 
-------------------------------------------------------------------------------
Initrd must be generated each time the kernel image is modified.

See the http://edf-hpc.github.io/clara/[clara documentation]  for a full 
list of options and possibilities.

Once image and initrd generated, it must be made available to the deployment
system.  

== Boot nodes

////
TODO: document how-to boot diskless nodes.
////
