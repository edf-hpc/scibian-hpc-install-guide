= Production procedures

In this chapter are listed all the technical procedures to follow for
regular operations occurring during the production phase of the supercomputer.
This notably includes changing any encryption or authentication key,
changing passwords, reinstalling nodes, etc.

include::prod/mac.asc[]

include::prod/keys.asc[]

include::prod/reinstall/admin.asc[]

include::prod/reinstall/service.asc[]

== Frontend access

[[production-frontend-drain]]
=== Draining

To perform a scheduled reboot of a frontend it is better to avoid new
connection going to the frontend node that will be rebooted. The new
connections are <<arch-adv-frontend-ha, highly available and load balanced>>
with IPVS.

It is possible to remove a frontend from the pool of node accepting new
connections without killing active connections with the `ipvsadm` command by
setting the weight of a node to 0.

To list the current weight, on a frontend:

----
# ipvsadm -ln
IP Virtual Server version 1.2.1 (size=4096)
Prot LocalAddress:Port Scheduler Flags
  -> RemoteAddress:Port           Forward Weight ActiveConn InActConn
TCP  172.16.1.16:22 rr persistent 600
  -> 172.16.1.11:22              Route   1      10         0
  -> 172.16.1.12:22              Route   1      6          0
  -> 172.16.1.13:22              Route   1      1          0
  -> 172.16.1.14:22              Route   1      15         0
  -> 172.16.1.15:22              Route   1      1          0
----

To avoid a frontend node being attributed to new sessions, the weight of the
node can be manually set to 0. This setting does not completely forbid new
connection to go to the node, if a user already has a session, new session will
go to the same node regardless of the weight. This setting also does not block
connections made directly to the node and not the virtual IP address.

----
# ipvsadm -e -t 172.16.1.16:22 -r 172.16.1.11:22 -w 0
# ipvsadm -ln
IP Virtual Server version 1.2.1 (size=4096)
Prot LocalAddress:Port Scheduler Flags
  -> RemoteAddress:Port           Forward Weight ActiveConn InActConn
TCP  172.16.1.16:22 rr persistent 600
  -> 172.16.1.11:22              Route   0      10         0
  -> 172.16.1.12:22              Route   1      6          0
  -> 172.16.1.13:22              Route   1      1          0
  -> 172.16.1.14:22              Route   1      15         0
  -> 172.16.1.15:22              Route   1      1          0
----

The modification can be reversed by setting the weight back to 1 manually.

----
# ipvsadm -e -t 172.16.1.16:22 -r 172.16.1.12:22 -w 1
----
