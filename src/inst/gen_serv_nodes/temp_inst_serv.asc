=== Temporary installation services

The goal of this section is to configure the Temporary Installation Services on
the Temporary Installation Node. This process is done in two steps:

- A First Run only using local files or external services
- A Second Run reconfiguring the Temporary Installation Node to use the
  services setup during the First Run with values that will also be used to
  install the other generic nodes remotely.

=== First Run

Consul is not available because the consul cluster needs quorum to work. Quorum
can only be achieved when more than half of the generic service nodes are
configures. The DNS server is therefore configured to only returns the
temporary installation node for all requests on the consul domain. This is done
simply by adding temporarily the following parameters in file
`$ADMIN/hpc-privatedata/hieradata/$CLUSTER/cluster.yaml`:

[source,yaml]
----
dns::server::virtual_relay: false
install_server_ip: '10.1.0.1' # static IP address of the temporary
                              # installation node on the administration
                              # network
----

Technically speaking, these parameters makes bind authorative on the _virtual_
DNS zone before Consul service discovery utility is available. The virtual zone
contains all the symbolic names to the network services (_ex:_ `http.virtual`).
This way, all services will be directed to the temporary installation node with
the IP address provided in `install_server_ip` parameter.

The first run also needs to work properly without a local DNS server and
without a local repository cache proxy. These service will be configured during
this first run. Local repositories must also be disabled during the first run.

[source,yaml]
----
# The normal values must be searched in cluster.yaml and commented out
private_files_dir: "file://%{hiera('profiles::http::system::docroot')}/hpc-config/%{environment}/latest/files"
apt::proxy_host:   ''
profiles::dns::client::nameservers:
  - '172.16.1.1' # External DNS server
hpcconfig::push::config_options:
  global:
    cluster:     "%{hiera('cluster_name')}"
    mode:        'posix'
    destination: "%{hiera('profiles::http::system::docroot')}/hpc-config"
----

The configuration will be pushed on local files while the temporary
installation is used. The settings above configures this, but the first push
must use a configuration that will be created manually in the file:
`/etc/hpc-config/push.conf`.

[source]
---
[global]
environment=production
version=latest
destination=/var/www/system/hpc-config
cluster=<CLUSTER NAME>
mode=posix
---

The directory where the keys were generated cannot be used as a key source for
apply because it will be overwritten during the apply. So it must be copied
before doing the apply. To deploy the configuration of the temporary
installation node, run the following commands:

----
# cd $ADMIN
# hpc-config-push
# mkdir $ADMIN/keys
# chmod 700 $ADMIN/keys
# openssl aes-256-cbc -d \
          -in $ADMIN/hpc-privatedata/files/$CLUSTER/eyaml/keys.tar.xz.enc \
	  -out $ADMIN/keys/keys.tar.xz \
	  -k <CLUSTER PASSWORD>
# hpc-config-apply --source file:///var/www/html/hpc-config \
                   --keys-source=file://$ADMIN/keys \
                   --verbose
# rm -rf $ADMIN/keys
----

If the run returned no error, there is some checks to do before proceeding. In
the following commands IP1 is the IP address of the current node. VIP[1-4] are
the IP addresses of the VIP for the service nodes.

You should check the following commands return no errors:

----
# wget -O /dev/null http://<IP1>:3139/hpc-config
# dig +short @VIP1 apt.service.virtual
IP1
# dig +short @VIP2 apt.service.virtual
IP1
# dig +short @VIP3 apt.service.virtual
IP1
# dig +short @VIP4 apt.service.virtual
IP1
----

With these commands we are now sure that:
* The Apache System service is responding properly
* The DNS service on the current node is working and always return the
  `install_server_ip` for all the `.virtual` requests
* The virtual IP addresses are up and all responding on the current service
  node.

=== Second Run

The goal of this run is to switch `hpc-config-apply` to download files through
apache and not just get them locally. We also change the local DNS client
configuration to use the newly configured local DNS server.

To change the private files source, do these changes in cluster.yaml:

----
server_web_system: "%{hiera('install_server_ip')}:%{hiera('profiles::http::system::port')}"
private_files_dir: "http://%{hiera('server_web_system')}/hpc-config/%{environment}/latest/files"
hpcconfig::apply::config_options:
  DEFAULT:
    source:
      value: "http://%{hiera('server_web_system')}/hpc-config"
    keys_source:
      value: "http://secret.service.%{hiera('virtual_domain')}:%{hiera('secret_port')}"
----

To switch to the local DNS server, remove the
`profiles::dns::client::nameservers` added for the first run and uncomment the
normal one that was commented out. Also remove the temporary `apt::proxy_host`
setting to use the configured apt-cacher-ng.

Do the actual run:

----
# cd $ADMIN
# hpc-config-push
# hpc-config-apply -v
----

If the two commands run without error, the initial setup succeeded.

At this stage, the temporary installation service are fully configured and
available to install other generic service nodes.
