=== Initial files

There are few files that are required in the cluster's file directory of the
internal configuration repository to deploy the generic service nodes.

First, create the needed sub-directories:

----
mkdir -p $ADMIN/hpc-privatedata/files/$CLUSTER/boot/ipxe \
         $ADMIN/hpc-privatedata/files/$CLUSTER/boot/disk-installer/scibian9 \
         $ADMIN/hpc-privatedata/files/$CLUSTER/ha
----

==== Debian installer

Download the Debian network installer archive:

----
# wget http://deb.debian.org/debian/dists/stretch/main/installer-amd64/current/images/netboot/netboot.tar.gz \
  -O $ADMIN/hpc-privatedata/files/$CLUSTER/boot/disk-installer/scibian9/netboot.tar.gz
----

////
NOTE: the installer can be removed from this section once this bug is fixed:
  https://github.com/edf-hpc/puppet-hpc/issues/102
////

==== iPXE binary

The iPXE ROM must be built from sources downloaded on
http://ipxe.org/[iPXE website]:

----
# wget https://git.ipxe.org/ipxe.git/snapshot/HEAD.tar.gz -O $ADMIN/ipxe.tar.gz
# tar -C $ADMIN -xzf $ADMIN/ipxe.tar.gz
# cd $ADMIN/ipxe-*/src
----

A small script is added to  retries DHCP requests until it succeeds in obtaining
a boot filename, as documented in http://ipxe.org/embed[iPXE official documentation].

----
#!ipxe
  
  :retry_dhcp
  dhcp && isset ${filename} || goto retry_dhcp
  echo Booting from ${filename}
  chain ${filename}
----

This is a workaround if DHCP requests are lost when booting a large number of nodes
simultaneously.
The "EMBED" option must be used for the compilation :

----
# make bin/undionly.kpxe EMBED=dhcp_retry.ipxe
# cp bin/undionly.kpxe $ADMIN/hpc-privatedata/files/$CLUSTER/boot/ipxe/ipxe_noserial.bin
----

The `ipxe_serial.bin` variant must be generated after modifying hard-coded
serial console parameters in iPXE source code as documented in
http://ipxe.org/console[iPXE official documentation].

////
NOTE: the iPXE ROM can be removed from this section once this bug is fixed:
  https://github.com/edf-hpc/puppet-hpc/issues/67
////

==== Bootmenu

The iPXE menu boot entries are generated dynamically, depending on the source
node name, by the CGI Python script
`$ADMIN/hpc-privatedata/files/$CLUSTER/boot/cgi/bootmenu.py`:

[source,python]
----
include::../../examples/bootmenu.py[]
----

////
NOTE: the bootmenu can be removed from this section once this bug is fixed:
  https://github.com/edf-hpc/puppet-hpc/issues/82
////

==== Partition schema

Debian installer partman utility requires a partition schema with rules and
constraints to create the disk partitions. This file must is located in
`$ADMIN/hpc-privatedata/files/$CLUSTER/boot/disk-installer/scibian9/partition-schema`.
Here is a complete example for this file:

[source]
----
include::../../examples/partition-schema[]
----

==== DNS server workaround

Finally, the version bind9 DNS server available in Debian Jessie is not able to
automatically listen for incoming connections to IP addresses configured after
the daemon has started. This is annoying when virtual IP addresses are gathered
to failover a failing generic service node. This behaviour is workaround with
the following script located in
`$ADMIN/hpc-privatedata/files/$CLUSTER/ha/rndc_reload.sh`:

[source,sh]
----
include::../../examples/rndc_reload.sh[]
----

This script is run when the virtual IP addresses move from one generic service
node to another. It asks bind9 daemon to reload its configuration which also
makes it listen on new IP addresses.
